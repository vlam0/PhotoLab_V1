I first created an outline based on the example file. First, I made the print menu function that displays the menu to alter the image as needed. I made a loop for the print menu  and added switch statements for the user to choose. The loop endeds as soon as the user enters 7. Then, I altered the other functions such as: black and white, hue, sharpen, and autotest. For the black and white function: I made all the red, green, and blue colors equal to the average of thoes three colors to change the image to black and white. For the hue function: I made temporary arrays for the three colors where they were saved as the same colors of the original image. I made the equations for alpha, gamma, and beta, then implemented into the the new equation to calculate the new setting for red, green, and blue. For the sharpen function: I also made temporary arrays for the three colors so the original wouldn't get distorted. I made a few loops to get each pixel and avoid the border of the image. I set three variables to 0 to obtain the new value for the new color of the image. Two more loops were created to calculate the weighted value of the primary colors along with it's surrounding pixels. To avoid errors, I made if statements for the three variable colors if it was either less than 0 or greater than 255. Then, I set those variables and altered the main colors. As for the auto test, I loaded the image, ran the black and white function, then saved the image. I repeated this process for sharpening and hue. In the main function, I called upon these functions as needed in the case statements that correlate to the menu. Lastly, for case 3 to 5 where the image gets changed, I saved the altered image to it's respective name.  
